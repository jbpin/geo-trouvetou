// The MIT License (MIT)

// Copyright (c) 2013 Jean-Baptiste Pin

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
function GeoPoint(a,b){this.latitude=a,this.longitude=b,this.data=null}function TreeNode(a){this.point=a,this.leaf=[]}function GeoTrouvetou(){this.tree=null}GeoPoint.prototype.getDirection=function(a){var b=0;return this.latitude>a.latitude&&(b=2),this.longitude>a.longitude&&(b+=1),b},GeoPoint.prototype.equals=function(a){return a.latitude==this.latitude&&a.longitude==this.longitude?!0:void 0},GeoPoint.prototype.closer=function(a,b){var c=Math.pow(a.latitude-this.latitude,2)+Math.pow(a.longitude-this.longitude,2),d=Math.pow(b.latitude-this.latitude,2)+Math.pow(b.longitude-this.longitude,2);return d>c?a:b},TreeNode.prototype.addLeaf=function(a){var b=this.find(a),c=b.point.getDirection(a);if(b.leaf[c]){var d=b.point.closer(a,b.leaf[c].point);if(d==b.leaf[c].point)b.leaf[c].addLeaf(a);else{var e=b.leaf[c],f=new TreeNode(a);f.leaf[f.point.getDirection(e.point)]=e,b.leaf[c]=f}}else b.leaf[c]=new TreeNode(a)},TreeNode.prototype.logPoint=function(a){console.log(a.latitude+" "+a.longitude)},TreeNode.prototype.find=function(a){var b=this.point.getDirection(a);if(this.leaf[b]){var d=this.leaf[b].find(a),e=a.closer(d.point,this.point);e==this.point&&(d=this);var f,g,h;if(0===b||3===b?(this.leaf[1]&&(g=this.leaf[1].find(a)),this.leaf[2]&&(h=this.leaf[2].find(a))):(this.leaf[0]&&(g=this.leaf[0].find(a)),this.leaf[3]&&(h=this.leaf[3].find(a))),g&&h)e=a.closer(g.point,h.point),f=e==g.point?g:h;else if(g)f=g;else{if(!h)return d;f=h}return e=a.closer(d.point,f.point),e==f.point&&(d=f),d}if(this.leaf.length){var c=this;return this.leaf.forEach(function(b){var d=a.closer(c.point,b.point);d!==c.point&&(c=b)}),c==this?this:c.find(a)}return this},TreeNode.prototype.toString=function(a){a||(a="."),this.point.data&&this.point.data.name&&console.log(a+" "+this.point.data.name+": "+this.point.latitude+","+this.point.longitude),this.leaf.forEach(function(b,c){b.toString(a+"--"+c)})},GeoTrouvetou.prototype.addPoint=function(a){this.tree?this.tree.addLeaf(a):this.tree=new TreeNode(a)},GeoTrouvetou.prototype.findClosest=function(a){return null===this.tree?null:this.tree.find(a)},GeoTrouvetou.prototype.toString=function(){this.tree.toString()},"undefined"!=typeof module&&module.exports&&(module.exports={GeoTrouvetou:GeoTrouvetou,GeoPoint:GeoPoint});