// The MIT License (MIT)

// Copyright (c) 2013 Jean-Baptiste Pin

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
function GeoPoint(latitude,longitude){this.latitude=latitude,this.longitude=longitude,this.data=null}function TreeNode(point){this.point=point,this.leaf=[]}function GeoTrouvetou(){this.tree=null}GeoPoint.prototype.getDirection=function(point){var latdif=0;return this.latitude>point.latitude&&(latdif=2),this.longitude>point.longitude&&(latdif+=1),latdif},GeoPoint.prototype.equals=function(point){return point.latitude==this.latitude&&point.longitude==this.longitude?!0:void 0},GeoPoint.prototype.closer=function(p1,p2){var sqdist1=Math.pow(p1.latitude-this.latitude,2)+Math.pow(p1.longitude-this.longitude,2),sqdist2=Math.pow(p2.latitude-this.latitude,2)+Math.pow(p2.longitude-this.longitude,2);return sqdist2>sqdist1?p1:p2},TreeNode.prototype.addLeaf=function(point){var direction=this.point.getDirection(point);this.leaf[direction]?this.leaf[direction].addLeaf(point):this.leaf[direction]=new TreeNode(point)},TreeNode.prototype.logPoint=function(point){console.log(point.latitude+" "+point.longitude)},TreeNode.prototype.find=function(point){var direction=this.point.getDirection(point);if(this.leaf[direction]){var n=this.leaf[direction].find(point),p=point.closer(n.point,this.point);p==this.point&&(n=this);var c,c1,c2;if(0===direction||3===direction?(this.leaf[1]&&(c1=this.leaf[1].find(point)),this.leaf[2]&&(c2=this.leaf[2].find(point))):(this.leaf[0]&&(c1=this.leaf[0].find(point)),this.leaf[3]&&(c2=this.leaf[3].find(point))),c1&&c2)p=point.closer(c1.point,c2.point),c=p==c1.point?c1:c2;else if(c1)c=c1;else{if(!c2)return n;c=c2}return p=point.closer(n.point,c.point),p==c.point&&(n=c),n}return this},GeoTrouvetou.prototype.addPoint=function(point){this.tree?this.tree.addLeaf(point):this.tree=new TreeNode(point)},GeoTrouvetou.prototype.findClosest=function(point){return null===this.tree?null:this.tree.find(point).point},"undefined"!=typeof module&&module.exports&&(module.exports={GeoTrouvetou:GeoTrouvetou,GeoPoint:GeoPoint});